#1.
#Crie um script Python que leia o nome de uma pessoa e mostre uma mensagem de boas-vindas de acordo com o valor digitado;

nome = input('What is your fuckin Name?? ')
print('Hello World! Hello {} you Mothafuckar!!'.format(nome))

##
#2
#Crie um script Python que leia o dia, o mes e o ano de nascimento de uma pessoa e mostre uma mensagem com a data formatada.

print('Data de Nascimento')

dia = input('Dia: ')
mes = input('Mês: ')
ano = input('Ano: ')

print('{}/{}/{}'.format(dia, mes, ano))

##
#3
#Crie um script Python que leia dois números e tente mostrar a soma entre eles.

num1 = int(input('Digite o primeiro número: '))
num2 = int(input('Digite o segundo número: '))

print('A soma entre {} e {} é {}'.format(num1, num2, num1 + num2))

##
#4
#Faça um programa que leia algo pelo teclado e mostre na tela o seu tipo primitivo e todas as informações possíveis sobre ele;

algo = input('Digite algo: ')
print('Tipo primitivo: {}'.format(type(algo)))
print('Tipo numérico: {}'.format(algo.isnumeric()))
print('Tipo alfanumérico: {}'.format(algo.isalnum()))

##
#5
#Faça um programa que leia um número inteiro e mostre na tela o seu sucessor e seu antecessor

num = int(input('Digite um número: '))
print('O Antecessor de {} é {}'.format(num, num-1))
print('O Sucessor de {} é {}'.format(num, num+1))

##
#6
#Crie um algoritmo que leia um número e mostre o seu dobro, triplo e raíz quadrada

import math

num = int(input('Digite um número: '))
print('A raiz de {} é {:.2f}'.format(num, math.sqrt(num)))
print('O dobro de {} é {}'.format(num, 2*num))
print('O triplo de {} é {}'.format(num, 3*num))

##
#7
#Desenvolva um programa que leia as duas notas de um aluno, calcule e mostre a sua média

nota1 = int(input('Digite a primeira nota: '))
nota2 = int(input('Digite a primeira nota: '))
soma= nota1 + nota2
print('A média entre as notas {:.2f} e {:.2f} é de {:.2f}'.format(nota1, nota2, soma/2))

##
#8
#Escreva um programa que leia um valor em metros e o exiba convertido em centímetros e milímetros

valor = int(input('Digite a medida:'))
print('{}cm'.format(valor*100))
print('{}mm'.format(valor*1000))

##
#9
#Faça um programa que leia um número inteiro qualquer e mostre na tela a sua tabuada

num = int(input('Digite um número: '))

cont = 1
while cont<=10:
    print('{} x {} = {}'.format(cont, num, cont*num))
    cont = cont + 1

##
#10
#Crie um programa que leia quanto dinheiro uma pessoa tem na carteira e mostre quantos Dólares ela pode comprar

dolar = 3.88
din = float(input('Quanto dinheiro tens? R$'))
print('Atualmente R${:.2f} equivalem a U${:.2f}'.format(din, din*dolar))

##
#11
#Faça um programa que leia a largura e a altura de uma parede em metros, calcule a sua área e a quantidade de tinta necessária para pintá-la. Sabendo que cada litro de tinta pinta uma área de 2m quadrados.

largura = float(input('Digite a largura da parede: '))
altura = float(input('Digite a altura da parede: '))
area = largura*altura
tinta = area/2

print('Uma parede de largura de {} e altura de {} tem {} metros quadrados.'.format(largura, altura, area))
print('Serão necessários {} litros de tinta para pinta-la.'.format(tinta))

##
#12
#Faça um algoritmo que leia o preço de um produto e mostre seu novo preço com 5% de desconto

preco = float(input('Digite o preço do produto: R$'))
print('Com desconto o preço fica R${:.2f}'.format(preco-preco*0.05))

##
#13
#Faça um algoritmo que leia o salário de um funcionário e mostre seu novo salário, com 15% de aumento

salario = float(input('O salário com aumento será de: R$'))
print('Com desconto o preço fica R${:.2f}'.format(salario+salario*0.15))

##
#14
#Faça um programa que leia uma temperatura em Celsius e exiba a correspondente em Fahrenheit

celsius = float(input('Digite uma temperatura em Celsius: '))
fahr = celsius*(9/5)+32
print('O correspondente em Fahrenheit é {:.0f}'.format(fahr))

##
#15
#Escreva um programa que pergunte a quantidade de Km percorridos por um carro alugado e a quantidade de dias pelos quais ele foi alugado. Calcule o preço a pagar, sabendo que o carro custa R$60 por dia e R$0,15 por Km rodado.

km = float(input('Quantos Km percorridos? '))
dias = int(input('Quantos dias de uso? '))
preco = 60*dias+0.15*km

print('O preco final a se pagar por {:.0f}Km percorridos durante {} dias será de R${:.2f}'.format(km, dias, preco))

##
#16
#Crie um programa que leia um numero Real qualquer pelo teclado e mostre na tela a sua porção inteira.

num = float(input('Digite um número real: '))
print('Porção inteira: {}'.format(int(num)))

##
#17
#Faça um programa que leia o comprimento do cateto oposto e do cateto adjacente de um triângulo retângulo, calcule e mostre o comprimento da hipotenusa

catop = float(input('Qual comprimento do cateto oposto? '))
cataj = float(input('Qual comprimento do cateto adjacente? '))
hip = pow(pow(catop,2) + pow(cataj,2),0.5)
print('Um triângulo retângulo com catetos de {} e {} tem hipotenusa de {}'.format(catop, cataj, hip))

##
#18
#Faça um programa que leia um ângulo qualquer e mostre na tela o valor do seno, cosseno e tangente desse ângulo

import math
angulo = float(input('Digite um ângulo qualquer: '))
seno = math.sin(angulo)
cosseno = math.cos(angulo)
tangente = math.tan(angulo)

print('Angulo de {}\nCosseno: {}\nSeno: {}\nTangente: {}'.format(angulo, cosseno, seno, tangente))

##
#19
#Um professor quer sortear um dos seus quatro alunos para apagar o quadro. Faça um programa que ajude ele, lendo o nome deles e escrevendo o nome do escolhido

import random

aluno1 = 'Zezinho'
aluno2 = 'Bob'
aluno3 = 'Fabiola'
aluno4 = 'Jacinta'

sorteado = random.randint(1,4)

if(sorteado == 1):
    print('O aluno sorteado foi o {}'.format(aluno1))
elif(sorteado == 2):
    print('O aluno sorteado foi o {}'.format(aluno2))
elif(sorteado == 3):
    print('O aluno sorteado foi a {}'.format(aluno3))
elif(sorteado == 4):
    print('O aluno sorteado foi a {}'.format(aluno4))

##
#20
#O mesmo professor do desafio anterior quer sortear a ordem de apresentação de trabalho dos alunos. Faça um programa que leia o nome dos quatro alunos e mostre a ordem sorteada

import random

lista = []
cont = 1
while cont<5:
    aluno = input('Digite o nome do aluno {}: '.format(cont))
    lista.append(aluno)
    cont = cont+1

random.shuffle(lista)
print('Ordem de apresentação sorteada {}'.format(lista))

##
#21
#Crie um programa que leia o nome completo de uma pessoa e mostre:
# (1) O nome com todas as letras maiúsculas;
# (2) O nome com todas as letras minúsculas;
# (3) Quantas letras ao todo (sem considerar espaços);
# (4) Quantas letras tem o primeiro nome.

nome = input('Digite seu nome completo: ')
print('(1): {}'.format(nome.upper()))
print('(2): {}'.format(nome.lower()))
print('(3): {}'.format(len(nome)-nome.count(' ')))
print('(4): {}'.format(len(nome.split()[0])))

##
#22
#Faça um programa que leia um número de 0 a 9999 e mostre na tela cada um dos dígitos separadores.

num = input('Digite um número qualquer: ')
if len(num)!=4:
    print('Digite um número com 4 algarismos.')
else:
    print('Digito dos milhares: {}'.format(num[0]))
    print('Digito das centenas: {}'.format(num[1]))
    print('Digito das dezenas: {}'.format(num[2]))
    print('Digito das unidades: {}'.format(num[3]))

##
#23
#Crie um programa que leia o nome de uma cidade e diga se ela começa ou não com o nome "SANTO"

cidade = input('Digite o nome de uma cidade: ').upper()
if cidade.split()[0] == 'SANTO':
    print('O nome da cidade de {} começa com SANTO.'.format(cidade))
else:
    print('O nome da cidade de {} não começa com SANTO.'.format(cidade))

##
#24
#Crie um programa que leia o nome de uma pessoa e diga se ela tem "SILVA" no nome.

nome = (input('Digite o seu nome: ')).upper().split()
cont = len(nome)
flag = 0
while(cont>0):
    if nome[cont-1] == 'SILVA':
        flag = 1
    cont = cont-1
if flag==1:
    print('Seu nome possui Silva.')
else:
    print('Seu nome não possui Silva.')

##
#25
#Faça um programa que leia uma frases pelo teclado e mostre:
#(1) Quantas vezes aparece a palavra "A";
#(2) Em que posição ela aparece a primeira vez;
#(3) Em que posição ela aparece a última vez.

frase = input('Digite uma frase qualquer: ').upper()
print('A palavra "A" aparece {} vezes.'.format(frase.count('A')))
print('A palavra "A" aparece pela primeira vez na posição {}'.format(frase.find('A')+1))
print('A palavra "A" aparece pela ultima vez na posição {}'.format(frase.rfind('A')+1))

##
#26
#Faça um programa que leia o nome completo de uma pessoa, mostrando em seguida o primeiro e o último nome separadamente.

nome = input('Digite seu nome completo: ').split()
print('O primeiro nome é {}'.format(nome[0]))
print('O último nome é {}'.format(nome[len(nome)-1]))

##
#27
#Escreva um programa que faça o computador "pensar" em um número inteiro entre 0 e 5 e peça para o usuário tentar descobrir qual foi o número escolhido pelo computador. O programa deverá escrever na tela se o usuário venceu ou perdeu.

import random

num = random.randint(0,5)
palpite = int(input('De um palpite (entre 0 e 5): '))
if palpite != num:
    while palpite != num:
        palpite = int(input('Você errou o palpite. Tente denovo! '))
    print('Você acertou o palpite {}'.format(palpite))
else:
    print('Você acertou o palpite {}'.format(palpite))

##
#28
#Escreva um programa que leia a velocidade de um carro. Se ele ultrapassar 80Km/h, mostre uma mensagem dizendo que ele foi multado. A multa vai custar R$7,00 por cada Km acima do limite.

velocidade = float(input('Qual é a velocidade do carro? '))
if velocidade > 80:
    print('Você foi multado! Preço de R${:.2f}'.format((velocidade-80)*7))
else:
    print('VRUMMMMMM')

##
#29
#Desenvolva um programa que pergunte a distância de uma viagem em Km. Calcule o preço da passagem, cobrando R$0,50 por Km para viagens de até 200Km e R$0,45 para viagens mais longas

distancia = float(input('Qual a distância percorrida? '))
if distancia <= 200:
    preco = 0.5*distancia
else:
    preco = 0.45*distancia

print('No total, a viagem com distância percorrida de {:.0f}Km terá um custo de R${:.2f}'.format(distancia, preco))

##
#30
#Faça um programa que leia um ano qualquer e mostre se ele é Bissexto

ano = int(input('Digite o ano: '))
if ano%4 == 0 and ano%100 != 0 or ano%400 == 0:
    print('Ano é bissexto.')
else:
    print('Não é bissexto.')

##
#31
#Faça um programa que leia três números e mostre qual é o maior e qual é o menor

num1 = int(input('Digite o primeiro número: '))
num2 = int(input('Digite o segundo número: '))
num3 = int(input('Digite o terceiro número: '))

if num1>=num2 and num1>=num3:
    maior = num1
    if num2<=num3:
        menor = num2
    else:
        menor = num3
elif num2>=num1 and num2>=num3:
    maior = num2
    if num1<=num3:
        menor = num1
    else:
        menor = num3
elif num3>=num1 and num3>=num2:
    maior = num3
    if num1<=num2:
        menor = num1
    else:
        menor = num2

print('Maior número digitado: {}'.format(maior))
print('Menor número digitado: {}'.format(menor))

##
#32
#Escreva um programa que pergunte o salário de um funcionário e calcule o valor de seu aumento. Para salários superiores a R$1.250,00, calcule um aumento de 10%. Para os inferiores ou iguais, o aumento é de 15%.

salario = float(input('Digite o salário do funcionário: R$'))
if salario > 1250:
    aumento = 0.1
else:
    aumento = 0.15

print('Após receber aumento, o funcionário de salário R${:.2f} passará a ganhar R${:.2f}'.format(salario, salario+salario*aumento))

##
#33
#Desenvolva um programa que leia o comprimento de três retas e diga ao usuário se eles podem ou não formar um triângulo.

reta1 = int(input('Digite o comprimento do primeiro lado: '))
reta2 = int(input('Digite o comprimento do segundo lado: '))
reta3 = int(input('Digite o comprimento do terceiro lado: '))

flagTriangulo = 0
if (abs(reta2-reta3))<reta1 and reta1<(reta2+reta3):
    flagTriangulo = 1
elif (abs(reta1-reta3))<reta2 and reta2<(reta1+reta3):
    flagTriangulo = 1
elif (abs(reta1-reta2))<reta3 and reta3<(reta1+reta2):
    flagTriangulo = 1

if flagTriangulo == 1:
    print('Lados {} e {} e {} formam um Triângulo.'.format(reta1, reta2, reta3))
else:
    print('Lados {} e {} e {} não formam um Triângulo.'.format(reta1, reta2, reta3))

##
#34
#Escreva um programa para aprovar o empréstimo bancário para a compra de uma casa. O programa vai perguntar o valor da casa, o salário do comprador e em quantos anos ele vai pagar.
#Calcule o valor da prestação mensal, sabendo que ela não pode exceder 30% do salário ou então o empréstimo será negado.

valorTotalCasa = float(input('Digite o valor Total da Casa: R$'))
salarioComprador = float(input('Digite o Salário do Comprador: R$'))
parcelaAnos = int(input('Digite em quantos anos será pago: '))

prestacao = valorTotalCasa/(parcelaAnos*12)

if prestacao>(0.3*salarioComprador):
    print('Empréstimo Negado!')
else:
    print('Empréstimo Aprovado! Prestação de R${:.2f} a ser paga durante {} anos.'.format(prestacao, parcelaAnos))

##
#35
#Escreva um programa que leia um número inteiro qualquer e peça para o usuário escolher qual será a base de conversão:
#1 para binário
#2 para octal
#3 para hexadecimal

num = int(input('Digite um número qualquer: '))
base = int(input('Digite a Base de Conversão:\n 1 para Binário\n 2 para Octal\n 3 para Hexadecimal\nBase escolhida: '))

if base==1:
    print('Em Binário o número {} equivale a {}'.format(num, bin(num)[2:]))
elif base==2:
    print('Em Octal o número {} equivale a {}'.format(num, oct(num)[2:]))
elif base==3:
    print('Em Hexadecimal o número {} equivale a {}'.format(num, hex(num)[2:].upper()))
else:
    print('Valor inválido.')

##
#36
#Escreva um programa que leia dois números inteiros e compare-os, mostrando na tela a mensagem:
#O primeiro valor é maior
#O segundo valor é maior
#Não existe valor maior, os dois são iguais

num1 = int(input('Digite o primeiro número: '))
num2 = int(input('Digite o segundo número: '))

if num1>num2:
    print('O primeiro valor é maior')
elif num2>num1:
    print('O segundo valor é maior')
else:
    print('Não existe valor maior, os dois são iguais')

##
#37
#Faça um programa que leia o ano de nascimento de um jovem e informe, de acordo com sua idade:
#Se ele vai se alistar ao serviço militar.
#Se é a hora de se alistar
#Se já passou do tempo de alistamento
#Seu programa também deverá mostrar o tempo que falta ou que passou do prazo.

import datetime

anoNascimento = int(input('Digite o ano de nascimento: '))
agora = datetime.datetime.now()
idade = agora.year-anoNascimento

if idade == 18:
    print('É hora de se alistar!')
elif idade < 18:
    print('Você deverá se alistar em {} anos'.format(18-idade))
else:
    print('Já passou da hora de se alistar! Você está atrasado em {} anos'.format(idade-18))

##
#38
#Crie um programa que leia duas notas de um aluno e calcule sua média, mostrando uma mensagem no final, de acordo com a média atingida:
#Média abaixo de 5.0: REPROVADO
#Média entre 5.0 e 6.9: RECUPERAÇÃO
#Média 7.0 ou superior: APROVADO

import math

nota1 = float(input('Digite a primeira nota: '))
nota2 = float(input('Digite a segunda nota: '))
media = (nota1+nota2)/2

if media<5:
    print('Sua média foi de {:.1f} Ta Reprovado!'.format(media))
elif media>=5 and media<6.9:
    print('Sua média foi de {:.1f} Ta de Recuperação!'.format(media))
else:
    print('Sua média foi de {:.1f} Ta Aprovado!'.format(media))

##
#39
#A Confederação Nacional de Natação precisa de um programa que leia o ano de nascimento de um atleta e mostre sua categoria, de acordo com a idade;
#Até 9 anos: MIRIM
#Até 14 anos: INFANTIL
#Até 19 anos: JUNIOR
#Até 20 anos: SÊNIOR
#Acima: MASTER

idade = int(input('Digite a sua idade: '))
if idade <= 9:
    categoria = 'Mirim'
elif idade <= 14:
    categoria = 'Infantil'
elif idade <= 19:
    categoria = 'Junior'
elif idade <= 20:
    categoria = 'Senior'
else:
    categoria = 'Master'

print('Idade do Atleta: {} anos\nCategoria: {}'.format(idade, categoria))

##
#40
#Refaça o desafio 035 dos triângulos, acrescentando o recurso de mostrar que tipo de triângulo será formado:
#Equilátero: todos os lados iguais
#Isóceles: dois lados iguais
#Escaleno: todos os lados diferentes

reta1 = int(input('Digite o comprimento do primeiro lado: '))
reta2 = int(input('Digite o comprimento do segundo lado: '))
reta3 = int(input('Digite o comprimento do terceiro lado: '))

flagTriangulo = 0
if (abs(reta2-reta3))<reta1 and reta1<(reta2+reta3):
    flagTriangulo = 1
elif (abs(reta1-reta3))<reta2 and reta2<(reta1+reta3):
    flagTriangulo = 1
elif (abs(reta1-reta2))<reta3 and reta3<(reta1+reta2):
    flagTriangulo = 1

if flagTriangulo == 1:
    if reta1 == reta2 == reta3:
        print('Lados {} e {} e {} formam um Triângulo Equilátero.'.format(reta1, reta2, reta3))
    elif (reta1 == reta2 and reta1 != reta3) or (reta2 == reta3 and reta2 != reta1) or (reta1 == reta3 and reta1 != reta2):
        print('Lados {} e {} e {} formam um Triângulo Isóceles.'.format(reta1, reta2, reta3))
    elif reta1 != reta2 != reta3:
        print('Lados {} e {} e {} formam um Triângulo Escaleno.'.format(reta1, reta2, reta3))
else:
    print('Lados {} e {} e {} não formam um Triângulo.'.format(reta1, reta2, reta3))


##
#41
#Desenvolva uma lógica que leia o peso e a altura de uma pessoa, calcule seu IMC e mostre seu status, de acordo com a tabela abaixo:
#Abaixo de 18.5: Abaixo do Peso
#Entre 18.5 e 25: Peso ideal
#25 até 30: Sobrepeso
#30 até 40: Obesidade
#Acima de 40: Obesidade mórbida

peso = float(input('Digite o seu peso: '))
altura = float(input('Digite a sua altura: '))

imc = peso / pow(altura,2)

if imc<18.5:
    print('Abaixo do Peso.')
elif imc < 25:
    print('Peso Ideal')
elif imc < 30:
    print('Sobrepeso.')
elif imc < 40:
    print('Obesidade.')
else:
    print('Obesidade Mórbida.')

##
#42
#Elabore um programa que calcule o valor a ser pago por um produto, considerando o seu preço normal e condição de pagamento:
#à vista dinheiro/cheque: 10% de desconto
#à vista no cartão: 5% de desconto
#em até 2x no cartão: preço normal
#3x ou mais no cartão: 20% de juros

precoInicial = float(input('Digite o preço do produto: R$'))
cond = int(input('Opções: \n[1] à vista dinheiro/cheque\n'
                        '[2] à vista no cartão\n'
                            '[3] em até 2x no cartão\n'
                                '[4] 3x ou mais no cartão\n'
                                    'Condição: '))
if cond == 1:
    precoFinal = precoInicial-precoInicial*0.1
elif cond == 2:
    precoFinal = precoInicial-precoInicial*0.05
elif cond == 4:
    precoFinal = precoInicial + precoInicial*0.2
else:
    precoFinal = precoInicial

print('Condição de Pagamento: {}\nPreço do Produto: R${:.2f} \nPreço Final: R${:.2f}'.format(cond, precoInicial, precoFinal))

##
#43
#Crie um programa que faça o computador jogar Jokenpô com você

import random

oponente = random.randint(1,3)

opcao = int(input('\n[1] Pedra \n[2] Papel \n[3] Tesoura \nSua jogada: '))
if oponente == opcao:
    print('Empatou!')
elif opcao == 1 and oponente == 2:
    print('Perdeu!  Você jogou Pedra e seu oponente jogou Papel')
elif opcao == 1 and oponente == 3:
    print('Perdeu! Você jogou Pedra e seu oponente jogou Tesoura')
elif opcao == 2 and oponente == 1:
    print('Ganhou! Você jogou Papel e seu oponente jogou Pedra')
elif opcao == 2 and oponente == 3:
    print('Perdeu! Você jogou Papel e seu oponente jogou Tesoura')
elif opcao == 3 and oponente == 1:
    print('Perdeu! Você jogou Tesoura e seu oponente jogou Pedra')
elif opcao == 3 and oponente == 2:
    print('Ganhou! Você jogou Tesoura e seu oponente jogou Papel')

##
#44
#Faça um programa que mostre na tela uma contagem regressiva para o estouro de fogos de artifício, indo de 10 até 0, com pausa de 1 segundo entre eles;

import os
from time import sleep

cont = 10
while cont>=0:
    os.system('cls')
    print(cont)
    sleep(1)
    cont = cont - 1
print('BOOOM')

##
#45
#Crie um programa que mostre na tela todos os números pares que estão no intervalo entre 1 e 50

cont = 1
while cont<=50:
    cont = cont+1
    if cont%2==0:
        print(cont)

##
#46
#Faça um programa que calcule a soma entre todos os números ímpares que são múltiplos de três e que se encontram no intervalo de 1 até 500.

soma = 0
for x in range(501):
    if x%2!=0 and x%3==0:
        soma = soma + x
print(soma)

##
#47
#Refaça o exercício DESAFIO 8, mostrando a tabuada de um número que o usuário escolher, só que agora utilizando um laço FOR;

num = int(input('Escolha um número: '))

for i in range (1,11):
    print('{} x {} = {}'.format(num, i, num*i))

##
#48
#Desenvolva um programa que leia seis números inteiros e mostre a soma apenas daqueles que foram pares. Se o valor digitado for ímpar, desconsidere-o.

soma = 0
for i in range(6):
    num = int(input('Digite um número qualquer: '))
    if num%2==0:
        soma = soma + num
print('A soma dos números digitados será de {}'.format(soma))

##
#49
#Desenvolva um programa que leia o primeiro termo e a razão de uma PA. No final, mostre os 10 primeiros termos dessa progressão.

n = 0
primeiroTermo = int(input('Digite o primeiro termo da Progressão: '))
razao = int(input('Digite a razão da Progressão: '))

for i in range(10):
    a = primeiroTermo + i * razao
    print(a)

##
#50
#Faça um programa que diga quantos números primos existem até 1.000

cont = 0
contaPrimos = 0
for i in range(1,1001):
    for n in range(i-1, 0, -1):
        if i%n==0:
            cont = cont+1
            if cont > 1:
                break
    if cont==1:
        contaPrimos = contaPrimos+1
    cont = 0

print(contaPrimos)

##
#51
#Crie um programa que leia um frase qualquer e diga se ela é um palíndromo, desconsiderando os espaços;

import math
flagPalindromo = False
frase = input('Digite uma frase qualquer: ')
cont = len(frase)
for x in frase:
    cont = cont - 1
    if x==frase[cont]:
        flagPalindromo = True
    if cont==math.ceil(len(frase)/2):
        break
print('A Frase digitada "{}" é um Palíndromo? {}'.format(frase, flagPalindromo))

##
#52
#Crie um programa que leia o ano de nascimento de sete pessoas. No final, mostre quantas pessoas ainda não atingiram a maioridade, e quantas já são maiores.

import datetime
now = datetime.datetime.now().year
maiores = 0

for i in range(0,7):
    ano = int(input('Digite o ano de nascimento do cidadão: '))
    if now-ano<18:
        maiores = maiores + 1

print('Dos sete anos de nascimento digitados, {} pessoas já atingiram a maioridade e {} não atingiram.'.format(maiores, 7-maiores))

##
#53
#Faça um programa que leia o peso de cinco pessoas. No final mostre qual foi o maior e o menor peso lidos.

maiorPeso = 0
menorPeso = 999

for p in range(1,6):
    peso = float(input('Digite o peso da Pessoa {}: '.format(p)))
    if peso >= maiorPeso:
        maiorPeso = peso
    if peso <= menorPeso:
        menorPeso = peso

print('Maior Peso digitado: {:.2f}Kg'.format(maiorPeso))
print('Menor Peso digitado: {:.2f}Kg'.format(menorPeso))

##
#54
#Desenvolva um programa que leia nome, idade e sexo de 4 pessoas. No final do programa, mostre:
#a média de idade do grupo;
#qual é o nome do homem mais velho;
#quantas mulheres têm menos de 20 anos.

maisVelho = ''
idadeMaisVelho = 0
mulheresVinte = 0
soma = 0
for i in range(1,5):
    nome = input('Digite o seu nome: ')
    idade = int(input('Digite a sua idade: '))
    sexo = input('Digite o sexo: ').upper()
    print('---*---')
    soma = soma + idade
    if sexo=='M' and idade >= idadeMaisVelho:
        idadeMaisVelho = idade
        maisVelho = nome
    if sexo=='F' and idade < 20:
        mulheresVinte = mulheresVinte + 1

print('A Média de idade do grupo é de {}'.format(soma / 4))
print('O Homem mais velho se chama {}'.format(maisVelho))
print('{} mulheres têm menos do que 20 anos.'.format(mulheresVinte))

##
#55
#Faça um programa que leia o sexo de uma pessoa, mas só aceite os valores M ou F. Caso esteja errado, peça a digitação novamente até ter um valor correto.

sexo = ''
lista = ['M', 'F']
while (sexo not in lista):
    sexo = input('Digite o sexo da pessoa: ').upper()
    if sexo not in lista:
        print('Opção inválida! Tente denovo.')
    else:
        if sexo == 'F':
            print('Sexo Feminino.')
        elif sexo == 'M':
            print('Sexo Masculino.')

##
#56
#Melhore o jogo do desafio28 onde o computador vai pensar em um número entre 0 e 10. Só que agora o jogador vai tentar adivinhar até acertar, mostrando no final quantos palpites foram necessários para vencer.

import random

sorteado = random.randint(1,10)
tentativa = 0
palpite = -1
while palpite != sorteado:
    palpite = int(input('Dê seu palpite: '))
    tentativa = tentativa + 1
print('Acertou! O Número sorteado foi {}. Depois de {} tentativas'.format(sorteado, tentativa))

##
#57
#Crie um programa que leia dois valores e mostre um menu na tela:
# [1] somar
# [2] multiplicar
# [3] maior
# [4] novos números
# [5] sair do programa
# Seu programa deverá realizar a operação solicitada em cada caso.

loop = 0
num1 = int(input('Digite o primeiro valor: '))
num2 = int(input('Digite o segundo valor: '))
opt = int(input('Digite a sua opção para operação:\n[1] Somar\n[2] Multiplicar\n[3] Maior\n[4] Novos Números\n[5] Sair do Programa'
                '\nOpção Escolhida: '))
if opt not in (1,2,3,4,5):
    print('Opção inválida.')
while opt != 5:
    loop = loop + 1
    if loop > 1:
        num1 = int(input('Digite o primeiro valor: '))
        num2 = int(input('Digite o segundo valor: '))
        opt = int(input('Digite a sua opção para operação:\n[1] Somar\n[2] Multiplicar\n[3] Maior\n[4] Novos Números\n[5] Sair do Programa'
                        '\nOpção Escolhida: '))
    if opt == 1:
        print('A soma entre {} e {} é {}'.format(num1, num2, num1+num2))
    elif opt == 2:
        print('A multiplicação entre {} e {} é {}'.format(num1, num2, num1 * num2))
    elif opt == 3:
        if num1 > num2:
            print('O maior número é {}'.format(num1))
        elif num1 < num2:
            print('O maior número é {}'.format(num2))
        else:
            print('Os números são iguais')
    elif opt == 4:
        num1 = int(input('Digite o primeiro valor: '))
        num2 = int(input('Digite o segundo valor: '))
        opt = int(input(
            'Digite a sua opção para operação:\n[1] Somar\n[2] Multiplicar\n[3] Maior\n[4] Novos Números\n[5] Sair do Programa'
            '\nOpção Escolhida: '))
print('Programa finalizado!')

##
#58
#Faça um programa que leia um número qualquer e mostre o seu fatorial.

num = int(input('Digite um número qualquer: '))
fatorial = num

for i in range(1,num):
    fatorial = fatorial*(num-i)

print('O fatorial de {} é {}'.format(num, fatorial))

##
#59
#Refaça o desafio51, lendo o primeiro termo e a razão de uma PA, mostrando os 10 primeiros termos da progrssão usando a estrutura while

primeiroTermo = int(input('Digite o primeiro termo da Progressão: '))
razao = int(input('Digite a razão da progressão: '))
lista =[]

cont = 0
while cont <= 10:
    lista.append(primeiroTermo)
    primeiroTermo = primeiroTermo+razao
    cont = cont+1

print('A progressao desejada é: ')
print(lista)

##
#60
#Melhore o desafio61, perguntando para o usuário se ele quer mostrar mais alguns termos. O programa encerra quando ele disser que quer mostar 0 termos.

print('Gerador de PA')
print('-='*10)
primeiro = int(input('Primeiro termo: '))
razao = int(input('Razão da PA: '))
termo = primeiro
cont = 1
total = 0
mais = 10
while mais != 0:
    total = total + mais
    while cont <= total:
        print('{} -> '.format(termo), end='')
        termo += razao
        cont += 1
    print('PAUSA')
    mais = int(input('Quantos termos você quer mostrar a mais? '))
print('FIM')

##
#61
#Escreva um programa que leia um número n inteiro qualquer e mostre na tela os n primeiros elementos de uma Sequência de Fibonacci.

##
#62
#Crie um programa que leia vários números inteiros pelo teclado. O programa só vai parar quando o usuário digitar o valor 999, que é a condição de parada. No final, mostre quantos números foram digitados e qual foi a soma entre eles (desconsiderando o flag).

lista=[]
num = 0

while num != 999:
    num = int(input('Digite o próximo número: '))
    if num != 999:
        lista.append(num)

print(sum(lista))

##
#63
#Crie um programa que leia vários número inteiros pelo teclado. No final da execução, mostre a média entre todos os valores e qual foi a maior e o menor valores lidos. O programa deve perguntar ao usuário se ele quer ou não continuar a digitar valores.

import statistics

lista = []
ind = 's'

while ind != 'N':
    num = int(input('Digite o próximo Número: '))
    lista.append(num)
    ind = input('Deseja continuar? ').upper()

print('Valores digitados: {}'.format(lista))
print('A média dos valores digitados é: {}'.format(statistics.mean(lista)))
print('O maior valor digitado foi de {}'.format(max(lista)))
print('O menor valor digitado foi de {}'.format(min(lista)))

##
#64
#Crie um programa que leia vários números inteiros pelo teclado. O programa só vai parar quando o usuário digitar o valor 999, que é a condição de parada. No final, mostre quantos números foram digitados e qual foi a soma entre eles.

lista=[]
num = 0

while num != 999:
    num = int(input('Digite o próximo número: '))
    if num != 999:
        lista.append(num)

print('A soma dos {} números digitados é de: {}'.format(len(lista), sum(lista)))

##
#65
#Faça um programa que mostre a tabuada de vários números, um de cada vez, para cada valor digitado pelo usuário. O programa será interrompido quando o número solicitado for negativo.

valor = 1
while valor > 0:
    valor = int(input('Digite o valor desejado: '))
    if valor <= 0:
        break
    print('TABUADA DO {}'.format(valor))
    for i in range(1,11):
        print('{} x {} = {}'.format(i, valor, i*valor))
print('Programa Finalizado.')

##
#66
#Faça um programa que joque par ou ímpar com o computador. O jogo só será interrompido quando o jogador perder, mostrando o total de vitórias consecutivas que ele conquistou no final do jogo.

import random

flagPerdedor = 0
while flagPerdedor != 1:
    jogadaOponente = random.randint(1,11)
    opt = input('Par ou Impar: ').upper()
    suaJogada = int(input('Qual é a sua jogada? '))
    total = jogadaOponente + suaJogada
    if opt == 'PAR' and (total%2==0):
        print('Você ganhou, por que {} é Par'.format(total))
    elif opt == 'IMPAR' and (total%2==0):
        flagPerdedor = 1
    elif opt == 'IMPAR' and (total%2!=0):
        print('Você ganhou, por que {} é Impar'.format(total))
    elif opt == 'PAR' and (total%2!=0):
        flagPerdedor = 1
print('Você perdeu, soma total de {}'.format(total))

##
#67
#Crie um programa que leia a idade e o sexo de várias pessoas. A cada pessoa cadastrada, o programa deverá perguntar se o usuário quer ou não continuar. No final mostre:
#quantas pessoas tem mais de 18 anos
#quantos homens foram cadastrados
#quantas mulheres tem menos de 20 anos

maiores = 0
homens = 0
mulheresMenosVinte = 0
pessoas = 0

prog = 's'
while prog != 'N':
    pessoas += 1
    sexo = input('[M] - Masculino\n[F] - Feminino\nSexo: ').upper()
    idade = int(input('Qual é a idade? '))
    if idade > 18:
        maiores += 1
    if sexo=='M':
        homens += 1
    if sexo=='F' and idade < 20:
        mulheresMenosVinte += 1
    prog = input('Quer continuar? (S/N)').upper()

print('Quantidade de pessoas cadastradas: {}'.format(pessoas))
print('Maiores de 18 anos: {}'.format(maiores))
print('Homens cadastrados: {}'.format(homens))
print('Mulheres com menos de 20 anos: {}'.format(mulheresMenosVinte))

##
#68
#Crie um programa que leia o nome e o preço de vários produtos. O programa deverá perguntar se o usuário vai continuar. No final, mostre:
#qual é o total gasto na compra
#quantos produtos custam mais de R$1000
#qual é o nome do produto mais barato

continuar = 's'
total = 0
produtosMaisMil = 0
maisBarato = 1000000
nomeMaisBarato = ''
quantidade = 0

while continuar != 'N':
    quantidade += 1
    produto = input('Digite o produto: ')
    preco = float(input('Qual o preço? R$'))
    total += preco
    if preco > 1000:
        produtosMaisMil += 1
    if preco < maisBarato:
        maisBarato = preco
        nomeMaisBarato = produto
    continuar = input('Quer continuar? (S/N)').upper()

print('Quantidade de produtos cadastrados: {}'.format(quantidade))
print('Total gasto na compra: R${:.2f}'.format(total))
print('{} produtos custam acima de R$1.000'.format(produtosMaisMil))
print('O produto mais barato é o {}'.format(nomeMaisBarato))

##
#69
#Crie um programa que simule o funcionamento de um caixa eletrônico. No início, pergunte ao usuário qual será o valor a ser sacado (número inteiro) e o programa vai informar quantas cédulas de cada valor serão entregues.
#obs: considere que o caixa possui cédulas de R$50, R$20, R$10 e R$1

##
#70
#Crie um programa que tenha uma tupla totalmente preenchida com uma contagem por extenso, de zero até vinte. Seu programa deverá ler um número pelo teclado (entre 0 e 20) e mostrá-o por extenso.

zahlen = ('Null', 'Ein', 'Zwei', 'Drei', 'Vier', 'Funf', 'Sechs', 'Sieben', 'Acht', 'Neun', 'Zehn', 'Elf', 'Zwölf', 'Dreizehn'
    , 'Vierzehn', 'Funfzehn', 'Sechzehn', 'Siebenzehn', 'Achtzehn', 'Neunzehn', 'Zwanzig')

nummer = int(input('Geben Sie eine Nummer über die Tastatur ein: '))
print('Die Nummer {} ist: {}'.format(nummer, zahlen[nummer]))

##
#71
#Crie uma tupla preenchida com os 20 primeiros colocados da Tabela do Compeonato Brasileiro de Futebol, na ordem de colocação. Depois mostre:
#a) Apenas os 5 primeiros colocados;
#b) Os últimos 4 colocados da tabela;
#c) Uma lista com os times em ordem alfabética;
#d) Em que posição da tabela está o time da Chapecoense.

brasileirao = ('Corinthians', 'Palmeiras', 'Santos', 'Grêmio', 'Cruzeiro', 'Flamengo', 'Vasco', 'Chapecoense', 'Atlético', 'Botafogo'
    , 'Atletico Paranaense', 'Bahia', 'São Paulo', 'Fluminense', 'Sport', 'Vitória', 'Coritiba', 'Avaí', 'Ponte Preta', 'Atlético Goianiense')
print('Os 5 primeiros colocados são {}'.format(brasileirao[:5]))
print('Os 4 últimos colocados são {}'.format(brasileirao[-4:]))
print('Em ordem alfabética: {}'.format(sorted(brasileirao)))
print('Chapecoense está em {} lugar.'.format(brasileirao.index('Chapecoense')+1))


##
#72
#Crie um programa que vai gerar cinco números aleatórios e colocar em uma tupla; Depois disso, mostre a listagem de números gerados e também indique o menor e o maior valor que estão na tupla.

import random
numeros = (random.randint(1, 10), random.randint(1, 10), random.randint(1, 10), random.randint(1, 10), random.randint(1, 10))

print('Listagem de números gerada: {}'.format(numeros))
print('Maior valor: {}'.format(max(numeros)))
print('Menor valor: {}'.format(min(numeros)))

##
#73
#Desenvolva um programa que leia quatro valores pelo teclado e guarde-os em uma tupla. No final mostre:
#a) Quantas vezes apareceu o valor 9
#b) Em que posição foi digitado o primeiro valor 3
#c) Quais foram os números pares

qtdPares = 0
numeros = (int(input('Digite um número: ')), int(input('Digite mais um número: ')), int(input('Digite outro número: '))
           , int(input('Digite mais um número: ')))
print('O número 9 apareceu {} vezes.'.format(numeros.count(9)))
print('O primeiro valor de 3 apareceu na posição {}'.format(numeros.index(3)+1))

for i in range(4):
    if numeros[i]%2==0:
        qtdPares += 1
print('Foram digitados {} números pares.'.format(qtdPares))

##
#74
#Crie um programa que tenha uma tupla única com nomes de produtos e seus respectivos preços, na sequência. No final, mostre uma listagem de preços, organizando os dados em forma tabular.

listaCompras = (('Lápis', 1.75),  ('Borracha', 2),  ('Caderno', 15.90),  ('Estojo', 25),  ('Transferidor', 4.20),  ('Compasso', 9.99)
                ,  ('Mochila', 120.32),  ('Canetas', 22.30),  ('Livro', 34.90))
print('-'*35)
print(' '*8+'LISTAGEM DE PREÇOS')
print('-'*35)
for i in range(len(listaCompras)):
    for n in range(2):
        if n%2==0:
            print(listaCompras[i][n], end='')
            print('.'*(25-len(listaCompras[i][n])), end='')
            print('R$'+'{:.2f}'.format(listaCompras[i][1]))
print('-'*35)

##
#75
#Crie um programa que tenha uma tupla com várias palavras (não usar acentos). Depois disso, você deve mostrar, para cada palavra, quais são as suas vogais.

tupla = ('cachorro', 'arara', 'mamute', 'alabama', 'cozinha', 'olodum', 'chapado', 'muqueca')
vogais = ('a', 'e', 'i', 'o', 'u')
lista = []

for i in range(len(tupla)):
    for n in range(len(tupla[i])):
        if vogais[0] in tupla[i][n]:
            lista.append(vogais[0])
        if vogais[1] in tupla[i][n]:
            lista.append(vogais[1])
        if vogais[2] in tupla[i][n]:
            lista.append(vogais[2])
        if vogais[3] in tupla[i][n]:
            lista.append(vogais[3])
        if vogais[4] in tupla[i][n]:
            lista.append(vogais[4])
    print('{}: {}'.format(tupla[i], lista))
    lista.clear()

##
#76
#Faça um programa que leia 5 valores numéricos e guarde-os em uma lista. No final, mostre qual foi o maior e o menor valor digitado e as suas respectivas posições na lista.

lista = []
for i in range(5):
    num = int(input('Digite um valor: '))
    lista.append(num)

print('O maior valor digitado foi {} na posição {}'.format(max(lista), lista.index(max(lista))+1))
print('O menor valor digitado foi {} na posição {}'.format(min(lista), lista.index(min(lista))+1))

##
#77
#Crie um programa onde o usuário possa digitar vários valores numéricos e cadastre-os em uma lista. Caso o número já exista lá dentro, ele não será adicionado. No final, serão exibidos todos os valores únicos digitados, em ordem crescente.

num = 999
lista = []
opt = 'S'

while opt != 'N':
    num = int(input('Digite um número: '))
    if num not in lista:
        lista.append(num)
    opt = input('Deseja continuar? [s/n] ').upper()
print(sorted(lista))

##
#78
#Crie um programa onde o usuário possa digitar cinco valores numéricos e cadastre-os em uma lista, já na posição correta de inserção (sem usar o sort()). No final, mostre a lista ordenada na tela.

##
#79
#Crie um programa que vai ler vários números e colocar em uma lista. Depois disso mostre:
#a) Quantos números foram digitados.
#b) A lista de valores, ordenada de forma descrescente.
#c) Se o valor 5 foi digitado e está ou não na lista.

lista = []
opt = 'S'

while opt != 'N':
    num = int(input('Digite um número: '))
    lista.append(num)
    opt = input('Deseja continuar? [s/n]').upper()

print('Foram digitados {} números.'.format(len(lista)))
print('Lista descrescente: {}'.format(sorted(lista, reverse=True)))
if 5 in lista:
    print('O valor 5 foi digitado na posição {}'.format(lista.index(5)+1))
else:
    print('O valor 5 não foi digitado.')

##
#80
#Crie um programa que vai ler vários números e colocar em uma lista. Depois disso, crie duas listas extras que vão conter apenas os valores pares e os valores ímpares digitados, respectivamente. Ao final, mostre o conteúdo das três listas geradas.

pares = []
impares = []
lista = []

for i in range(10):
    num = int(input('Digite um número: '))
    lista.append(num)
    if lista[i]%2==0:
        pares.append(lista[i])
    else:
        impares.append(lista[i])

print('Valores pares digitados: {}'.format(pares))
print('Valores impares digitados: {}'.format(impares))

##
#81
#Crie um programa onde o usuário digite uma expressão qualquer que use parênteses. Seu aplicativo deverá analisar se a expressão passada está com os parênteses abertos e fechados na ordem correta.

expressao = str(input('Digite a expressão: '))
pilha = []
for simb in expressao:
    if simb == '(':
        pilha.append('(')
    elif simb == ')':
        if len(pilha)>0:
            pilha.pop()
        else:
            pilha.append(')')
            break
if len(pilha) == 0:
    print('Sua expressão está válida!')
else:
    print('Sua expressão está errada!')

##
#82
#Faça um programa que leia nome e peso de várias pessoas, guardando tudo em uma lista. No final, mostre:
#a) Quantas pessoas foram cadastradas.
#b) Uma listagem com as pessoas mais pesadas.
#c) Uma listagem com as pessoas mais leves.

continuar = 'S'
lista = []
valores = []
cont = 0

while continuar != 'N':
    valores.append(input('Nome: '))
    valores.append(float(input('Peso: ')))
    lista.append(valores[:])
    valores.clear()
    continuar = input('Deseja continuar? [S/N] ').upper()
    cont = cont + 1

maisPesados = []
maisLeves = []
nomeMaisPesados = []
nomeMaisLeves = []
maiorPeso = 0
menorPeso = 999

for i in range(len(lista)):
    for n in range(2):
        if n==1:
            if lista[i][n] < menorPeso:
                maisLeves.append(lista[i][n])
                nomeMaisLeves.append(lista[i][n-1])
                menorPeso = lista[i][n]
            if lista[i][n] > maiorPeso:
                maisPesados.append(lista[i][n])
                nomeMaisPesados.append(lista[i][n-1])
                maiorPeso = lista[i][n]

print('Ao todo, você cadastrou {} pessoas.'.format(cont))
print('O maior peso foi de {}Kg. Peso de {}'.format(maisPesados[len(maisPesados)-1], nomeMaisPesados[len(nomeMaisPesados)-1]))
print('O menor peso foi de {}Kg. Peso de {}'.format(maisLeves[len(maisLeves)-1], nomeMaisLeves[len(nomeMaisLeves)-1]))

##
#83
#Crie um programa onde o usuário possa digitar sete valores numéricos e cadastre-os em uma lista única que mantenha separados os valores pares e ímpares. No final, mostre os valores pares e ímpares em ordem crescente.

listaNumeros = [[], []]
for n in range(7):
    if n == 0:
        num = int(input('Digite o primeiro valor: '))
    elif n == 1:
        num = int(input('Digite o segundo valor: '))
    elif n == 2:
        num = int(input('Digite o terceiro valor: '))
    elif n == 3:
        num = int(input('Digite o quarto valor: '))
    elif n == 4:
        num = int(input('Digite o quinto valor: '))
    elif n == 5:
        num = int(input('Digite o sexto valor: '))
    elif n == 6:
        num = int(input('Digite o sétimo valor: '))
    if num%2==0:
        listaNumeros[0].append(num)
    else:
        listaNumeros[1].append(num)

print('Lista de Valores Pares digitados: {}'.format(sorted(listaNumeros[0])))
print('Lista de Valores Impares digitados: {}'.format(sorted(listaNumeros[1])))

##
#84
#Crie um programa que crie uma matriz de dimensão 3x3 e preencha com valores lidos pelo teclado. No final, mostre a matriz na tela, com formatação correta.

matriz = [[0, 0, 0], [0, 0, 0], [0, 0, 0]]

for i in range(len(matriz)):
    for n in range(len(matriz[i])):
        matriz[i][n] = int(input('Digite o valor para a posição: [{}, {}]: '.format(i, n)))

print('-='*30)
for l in range(0,3):
    for c in range(0,3):
        print(f'[{matriz[l][c]:^5}]',end='')
    print()

##
#85
#Aprimore o desafio anterior, mostrando no final:
#a) A soma de todos os valores pares digitados
#b) A soma dos valores da terceira coluna
#c) O maior valor da segunda linha

matriz = [[0, 0, 0], [0, 0, 0], [0, 0, 0]]
somaPares = 0

for i in range(len(matriz)):
    for n in range(len(matriz[i])):
        matriz[i][n] = int(input('Digite o valor da posição [{}, {}]: '.format(i, n)))
        if matriz[i][n] % 2 == 0:
            somaPares = somaPares + matriz[i][n]

for l in range(3):
    for j in range(3):
        print(f'[{matriz[l][j]:^5}]', end='')
    print()

print()
print('A soma dos valores pares digitados é {}'.format(somaPares))
print('A soma dos valores da terceira coluna é {}'.format(matriz[0][2] + matriz[1][2] + matriz[2][2]))
print('O maior valor da segunda linha é: {}'.format(max(matriz[1][0], matriz[1][1], matriz[1][2])))

##
#86
#Faça um programa que ajude um jogador da Mega Sena a criar palpites. O programa vai perguntar quantos jogos serão gerados e vai sortear 6 números entre 1 e 60 para cada jogo, cadastrando tudo em uma lista.

from random import randint
from time import sleep

lista = list()
jogos = list()
print('-'*30)
print('       JOGA NA MEGA SENA      ')
print('-'*30)
quantidade = int(input('Quantos jogos você quer que eu sorteie? '))
tot = 1

while tot <= quantidade:
    cont = 0
    while True:
        num = randint(1, 60)
        if num not in lista:
            lista.append(num)
            cont += 1
        if cont >= 6:
            break

    lista.sort()
    jogos.append(lista[:])
    lista.clear()
    tot += 1
print('-='*3, f' SORTEANDO {quantidade} JOGOS ', '-='*3)
for i, l in enumerate(jogos):
    print(f'Jogo {i+1}: {l}')
    sleep(1)

##
#87
#Crie um programa que leia nome e duas notas de vários alunos e guarde tudo em uma lista composta. No final, mostre um boletim contendo a mé´dia de cada um e permita que o usuário possa mostrar as notas de cada aluno individualmente.

continua = 'a'
lista = list()
listaValores = list()

while continua != 'N':
    listaValores.append(input('Nome: '))
    listaValores.append(float(input('Nota 1: ')))
    listaValores.append(float(input('Nota 2: ')))
    lista.append(listaValores[:])
    continua = input('Deseja continuar? [S/N] ').upper()
    if continua == 'S':
        listaValores.clear()

print('No.  NOME          MÉDIA')
print('-'*30)
for indice, valor in enumerate(lista):
    print(f'{indice}'+' '*4, end='')
    print(f'{valor[0]}'+' '*(14-(len(valor[0]))), end='')
    print(f'{(valor[1]+valor[2])/2}')

print('-'*45)
while True:
    aluno = int(input('Mostrar notas de qual aluno? (999 interrompe): '))
    if aluno == 999:
        break
    print('Notas de {} são {}'.format(lista[aluno][0], lista[aluno][1:]))
    print('-'*45)
print('-'*45)
print('FIM')

##
#88
#Faça um programa que leia nome e média de um aluno, guardando tambéma situação em um dicionário. No final, mostre o conteúdo da estrutura na tela.

aluno = dict()
aluno['nome'] = str(input('Nome: '))
aluno['média'] = float(input(f'Média de {aluno["nome"]}: '))
if aluno['média'] >= 7:
    aluno['situação'] = 'Aprovado'
elif 5 <= aluno['média'] < 7:
    aluno['situação'] = 'Recuperação'
else:
    aluno['situação'] = 'Reprovado'

print('-='*30)
for k, v in aluno.items():
    print(f' - {k} é igual a {v}')

##
#89
#Crie um programa onde 4 jogadores joguem um dado e tenham resultados aleatórios. Guarde esses resultados em um dicionário. No final, coloque esse dicionário em ordem, sabendo que o vencedor tirou o maior número no dado.

import random
import operator

jogadas = dict()
jogadas['Jogador1'] = random.randint(1,6)
jogadas['Jogador2'] = random.randint(1,6)
jogadas['Jogador3'] = random.randint(1,6)
jogadas['Jogador4'] = random.randint(1,6)

for key, value in jogadas.items():
    print(f'{key} tirou {value} no dado.')
print('-='*45)

ranking = list()
ranking = sorted(jogadas.items(), key=operator.itemgetter(1), reverse=True)

for i, v in enumerate(ranking):
    print(f'{i+1}º lugar: {v[0]} com {v[1]}')

##
#90
#Crie um programa que leia nome, ano de nascimento e carteira de trabalho e cadastre-os (com idade) em um dicionário se por acaso a CTPS for diferente de zero, o dicionário receberá também o ano de contratação e o salário. Calcule e acrescente, além da idade, com quantos anos a pessoa vai se aposentar.

from datetime import datetime

dicionario = {}

dicionario['nome'] = str(input('Nome: '))
dicionario['idade'] = datetime.now().year - int(input('Ano de Nascimento: '))
dicionario['carteira'] = int(input('Carteira de Trabalho (0 não tem): '))
if dicionario['carteira'] != 0:
    dicionario['contratacao'] = int(input('Ano de Contratação: '))
    dicionario['salario'] = int(input('Salário: R$'))
    dicionario['aposentadoria'] = dicionario['idade'] + ((dicionario['contratacao']+35) - datetime.now().year)

print('-='*40)
for key, value in dicionario.items():
    print(f' - {key} tem o valor {value}')

##
#91
#Crie um programa que gerencie o aproveitamento de um jogador de futebol. O programa vai lei o nome do jogador e quantas partidas ele jogou. Depois vai ler a quantidade de gols feitos em cada partida. No final, tudo isso será guardado em um dicionário, incluindo o total de gols feitos durante o compeonato.

def mostraLinhas():
    print('-='*35)

aproveitamento = dict()
desempenho = list()

aproveitamento['nome'] = str(input('Nome do Jogador: '))
aproveitamento['partidas'] = int(input(f'Quantas partidas {aproveitamento["nome"]} jogou? '))
for n in range(aproveitamento['partidas']):
    desempenho.append(int(input(f'    Quantos gols na partida {n}? ')))
aproveitamento['gols'] = desempenho
aproveitamento['total'] = sum(desempenho)

mostraLinhas()
print(aproveitamento)
mostraLinhas()
for key, value in aproveitamento.items():
    print('O campo {} tem o valor {}'.format(key, value))
mostraLinhas()
print('O jogador {} jogou {} partidas.'.format(aproveitamento['nome'], aproveitamento['partidas']))
for i, j in enumerate(desempenho):
    print('   => Na partida {}, fez {} gols'.format(i, j))

##
#92
#Crie um programa que leia nome, sexo e idade de várias pessoas, guardando os dados de cada pessoa em um dicionário e todos os dicionários em uma lista. No final mostre:
#a) quantas pessaos foram cadastradas
#b) a média de idade do grupo
#c) uma lista com todas as mulheres
#d) uma lista com todas as pessoas com idade acima da média

continuar = ''
cont = 0
lista = []
listaMulheres = []

while continuar != 'N':
    dict = {}
    dict['nome'] = str(input('Nome: '))
    dict['sexo'] = str(input('Sexo [M/F] ')).upper()
    if dict['sexo'] not in ('M', 'F'):
        print('ERRO! Por favor, digite apenas M ou F.')
        dict['sexo'] = str(input('Sexo [M/F] ')).upper()
    if dict['sexo'] == 'F':
        listaMulheres.append(dict['nome'])
    dict['idade'] = int(input('Idade: '))
    lista.append(dict.copy())
    dict.clear()
    continuar = input('Quer continuar? [S/N] ').upper()
    cont += 1
print('-='*40)

media = 0
for n in range(len(lista)):
    media = media + lista[n]['idade']
media = media / cont

acimaMedia = []
for n in range(len(lista)):
    if lista[n]['idade'] > media:
        acimaMedia.append(lista[n]['nome'])

print('A) Ao todo temos {} pessoas cadastradas'.format(cont))
print('B) A média de idade é de {} anos.'.format(media))
print('C) As mulheres cadastradas foram {}'.format(listaMulheres))
print('D) A lista de pessoas que estão acima da méda: {}'.format(acimaMedia))

##
#93
#Aprimore o desafio 090 para que ele funcione com vários jogadores, incluindo um sistema de visualização de detalhes do aproveitamento de cada jogador.

##
#94
#Faça um programa que tenha uma função chamada área(), que receba as dimensões de um terreno retangular (largura e comprimento) e mostre a área do terreno

def area(l, c):
    a = l * c
    print('A área de um terreno {:.1f}x{:.1f} é de {:.1f}m².'.format(l, c, a))

print(' Controle de Terrenos')
print('-'*23)
largura = float(input('LARGURA (m): '))
comprimento = float(input('COMPRIMENTO (m): '))

area(largura, comprimento)

##
#95
#Faça um programa que tenha uma função chamada escreva(), que receba um texto qualquer como parâmetro e mostre uma mensagem com tamanho adaptável.

def escreva(msg):
    print('~'*len(msg)*2)
    print(' '*int(len(msg)/2)+f'{msg}')
    print('~' * len(msg)*2)

mensagem = input('Escreva a mensagem: ')
escreva(mensagem)

##
#96
#Faça um programa que tenha uma função chamada contador(), que receba três parâmetros: início, fim e passo e realize a contagem. Seu programa tem que realizar três contagens através da função criada.
#a) de 1 até 10, de 1 em 1
#b) de 10 até 0, de 2 em 2
#c) uma contagem personalizada

def contador(inicio, fim, passo):
    print(f'\nContagem de {inicio} até {fim} de {passo} em {passo}: ')
    if inicio<fim:
        while inicio<=fim:
            print(inicio, end=' ')
            inicio = inicio+abs(passo)
    elif inicio>fim:
        while inicio>=fim:
            print(inicio, end=' ')
            inicio = inicio-abs(passo)
    print()
contador(1, 10, 1)
contador(10, 0, 2)

print('\nAgora é a sua vez de personalizar a contagem!')
i = int(input('Início: '))
f = int(input('Fim: '))
p = int(input('Passo: '))

contador(i, f, p)

##
#97
#Faça um programa que tenha uma função chamada maior(), que receba vários parâmetros com valores inteiros. Seu programa tem que analisar todos os valores e dizer qual deles é maior.

def maior(* num):
    cont = maior = 0
    print('\nAnalisando os valores passados...')
    for valor in num:
        print(f'{valor} ', end='')
        if cont == 0:
            maior = valor
        else:
            if valor > maior:
                maior = valor
        cont += 1
    print('Foram informados {} valores ao todo.'.format(cont))
    print('O maior valor informado foi {}'.format(maior))

maior(1,2,4,5,7)

##
#98
#Faça um programa que tenha uma lista chamada números e duas funções chamadas sorteia() e somaPar(). A primeira função vai sortear 5 números e vai colocá-los dentro da lista e a segunda função vai mostrar a soma entre todos os valores Pares sorteados pela função anterior.

from random import randint

numeros = []

def sorteia():
    for i in range(5):
        i = randint(0,9)
        numeros.append(i)

def somaPar():
    soma = 0
    sorteia()
    print('Sorteando 5 valores da lista: {}'.format(numeros))
    for n in range(len(numeros)):
        if numeros[n]%2==0:
            soma = soma + numeros[n]

    print('Somando os valores pares da lista, temos: {}'.format(soma))

somaPar()


##
#99
#Crie um programa que tenha uma função chamada voto() que vai receber como parâmetro o ano de nascimento de uma pessoa, retornando um valor literal indicando se uma pessoa tem voto negado, opcional ou obrigatório nas eleições.

from datetime import datetime

def voto(ano):
    idade = datetime.now().year - ano
    if idade >= 18:
        print(f'Com {idade} anos: VOTO OBRIGATÓRIO')
    else:
        print(f'Com {idade} anos: NÃO VOTA')

a = int(input('Em que ano você nasceu? '))
voto(a)

##
#100
#Crie um programa que tenha uma função fatorial() que recebe dois parâmetros: o primeiro que indique o número a calcular e o outro chamado show, que será um valor lógico (opcional) indicando se será mostrado ou não na tela o processo de cálculo do fatorial

def fatorial(num, show):
    fatorial = num
    for i in range(1, num):
        fatorial = fatorial * (num - i)
    if show == True:
        for i in range(1, num):
            print(f'{i} x ', end='')
        print(f'{num} = {fatorial}')
    else:
        print(fatorial)

fatorial(5,True)


##
#101
#Faça um programa que tenha uma função chamada ficha(), que receba dois parâmetros opcionais: o nome de um jogador e quantos gols ele maracou. O programa deverá ser capaz de mostrar a ficha do jogador, mesmo que algum dado não tenha sido informado corretamente.

def ficha(jog='<desconhecido>', gol=0):
    print(f'O jogador {jog} fez {gol} gol(s) no campeonato.')

n = str(input('Nome do jogador: '))
g = str(input('Número de gols: '))
if g.isnumeric():
    g = int(g)
else:
    g = 0
if n.strip() == '':
    ficha(gol=g)
else:
    ficha(n, g)

##
#102
#Crie um programa que tenha a função leiaInt(), que vai funcionar de forma semelhante à função input() do Python, só fazendo a validação para aceitar apenas um valor numérico.

def leiaInt(msg):
    ok = False
    valor = 0
    while True:
        n = str(input(msg))
        if n.isnumeric():
            valor = int(n)
            ok = True
        else:
            print('\033[0;31mERRO! Digite um número inteiro válido.\033[m')
        if ok:
            break
    return valor

n = leiaInt('Digite um número: ')
print(f'Você acabou de digitar o número {n}')

##
#103
#Faça um programa que tenha uma função notas() que pode receber várias notas de alunos e vai retornar um dicionário com as seguintes informações:
#- quantidade de nota
#- maior nota
#- menor nota
#- média da turma
#- situaçã (opcional)

def notas(*n, sit=False):
    """
    -> Função para analisar notas e situaçãoes de vários alunos.
    :param n: uma ou mais notas dos alunos (aceita várias)
    :param sit: valor opcional, indicando se deve ou não adicionar a situação
    :return: dicionário com várias informações sobre a situação da turma
    """
    r = dict()
    r['total'] = len(n)
    r['maior'] = max(n)
    r['menor'] = min(n)
    r['media'] = sum(n)/len(n)
    if sit:
        if r['media'] >= 7:
            r['situacao'] = 'BOA'
        elif r['media'] >= 5:
            r['situacao'] = 'RAZOAVEL'
        else:
            r['situacao'] = 'RUIM'
    return r

resp = notas(5.5, 2.5, 9, 8.5, sit=True)
print(resp)
help(notas)

##
#104
#Faça um mini sistema que utilize a interatividade Help do Python. O usuário vai digitar o comando e o manual vai aparecer. Quando o usuário digitar a palavra 'FIM', o programa se encerrará.

d = ('\033[m'           #0 - sem cores
    ' \033[0;30;41m'    #1 - vermelho
    ' \033[0;30;42m'    #2 - verde
    ' \033[0;30;43m'    #3 - amarelo
    ' \033[0;30;44m'    #4 - azul
    ' \033[0;30;45m'    #5 - roxo
    ' \033[7;30m'       #6 - branco
    );

def ajuda(com):
    help(com)

def titulo(msg, cor=0):
    tam = len(msg)+4
    print('~'*tam)
    print(f'  {msg}')
    print('~'*tam)

comando = ''
while True:
    titulo('SISTEMA DE AJUDA PyHELP', 2)
    comando = str(input('Função ou Biblioteca > '))
    if comando.upper() == 'FIM':
        break
    else:
        ajuda(comando)
titulo('Até Logo!',1)

---
Desafios: #61, #69, #78, #93